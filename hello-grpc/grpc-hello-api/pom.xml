<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>hello-grpc</artifactId>
        <groupId>org.orh</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.orh.grpc</groupId>
    <artifactId>grpc-hello-api</artifactId>

    <dependencies>
        <!-- grpc-all 依赖包含了gRPC的全部依赖，简单情况下我们可以直接使用这个依赖，特定情况下可以针对性的选择依赖，如grpc-netty、grpc-protobuf、grpc-stub -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-all</artifactId>
            <version>${grpc.version}</version>
        </dependency>
    </dependencies>

    <!--此外，我们需要添加 Maven扩展与插件，因为后面要直接使用 Maven 来执行 `Protocol Buffers` 命令，从而生成 Stub 代码库。-->
    <build>
        <extensions>
            <!--os-maven-plugin 扩展用于生成各种与平台无关的属性-->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.5.0.Final</version>
            </extension>
        </extensions>
        <plugins>
            <!-- protobuf-maven-plugin 用于执行 Protocol Buffers 命令生成 Stub 代码块
             一下配置表示：执行 mvn compile 命令时，将生成 Stub代码-->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.5.0</version>
                <configuration>
                    <pluginId>grpc-java</pluginId>
                    <protocArtifact>
                        com.google.protobuf:protoc:3.1.0:exe:${os.detected.classifier}
                    </protocArtifact>
                    <pluginArtifact>
                        io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                    </pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>